#+TITLE: Medición de la pobreza --- Soluciones
#+SETUPFILE: ../setup.org

#+PROPERTY: header-args:R :session *R-ec1047-pov-sol*
#+PROPERTY: header-args:R+ :tangle no
#+PROPERTY: header-args:R+ :exports results
#+PROPERTY: header-args:R+ :results output

#+MACRO: R src_R[:results value raw]{paste0("$",$1,"$")}

#+begin_src R :exports none
  library(tidyverse)
  library(readxl)

  y <- read_excel("data/rentas.xlsx", col_types = "numeric") |>
    pull(y)

  N <- length(y)
  y_med <- median(y)
  z <- 0.6 * y_med
  q <- sum(y < z)
#+end_src


#+begin_tcolorbox
#+ATTR_LATEX: :options [1), series = questions]
1. ($0.4$ /puntos/) Calcule los tres índices con los datos de
   =rentas.xlsx= usando un umbral de la pobreza igual al \pct{60} de
   la renta mediana.
#+end_tcolorbox


Las rentas que aparecen en el archivo =rentas.xlsx= son:
#+begin_src R :results output raw
  cat("#+ATTR_LATEX:  :align *{10}{>{$}r<{$}}\n")
  y |>
    formatC(digits = 1, width = 4, format = "f") |>
    matrix(nrow = 4, byrow = TRUE) |>
    apply(1, \(x) paste("|", x, collapse = " ")) |>
    paste(collapse = " |\n") |>
    cat("|\n")
#+end_src
La renta media es de {{{R(y_med)}}} mil euros al año. El umbral
de la pobreza es igual al \pct{60} de la renta mediana, $z = 0.6 \cdot
\operatorname{med}(y_i) =$ {{{R(z)}}} miles de euros al año. De los $N
=$ {{{R(N)}}} individuos, hay $q =$ {{{R(q)}}} cuyas rentas son
inferiores al umbral de la pobreza. El índice de la pobreza es:
#+begin_export latex
\[
H = \frac{q}{N} = \frac{8}{40} = 0.2.
\]
#+end_export

Para calcular los otros indicadores de pobreza se utiliza la siguiente tabla, considerando solo las rentas inferiores al umbral:
#+begin_src R :results output raw
  tbl <- tibble(i = 1:q,
                y = y[1:q],
                zy = z - y,
                zyz = zy / z,
                zyz2 = zyz^2)

  ncols <- ncol(tbl)
  digits <- c(0, 1, 1, 3, 3)
  wdth <- 6

  body <- map2(tbl, digits,
                  \(x, d) formatC(x, digits = d, width = wdth, format = "f")) |>
    as_tibble() |>
    as.matrix() |>
    apply(1, \(x) paste("|", x, collapse = " ")) |>
    paste(collapse = " |\n") |>
    paste("|\n")

  hyphens <- rep("-", wdth + 2) |>
    paste0(collapse = "")

  hline <- paste0("|", hyphens) |>
    rep(ncols) |>
    paste0(collapse = "") |>
    paste0("|\n")

  drop_cols <- -1
  sums <- tbl[drop_cols] |>
    map(sum) |>
    map2(digits[drop_cols],
         \(x, d) formatC(x, digits = d, width = wdth, format = "f"))

  tbl_summ <- c("\\text{Suma}", unlist(sums)) |> unname()

  foot <- paste("| ", tbl_summ, collapse = " ") |>
    paste("|\n")

  col_hdrs <- c("i",
                "y_{i}",
                "z - y_{i}",
                "(z - y_{i}) / z",
                "\\big((z - y_{i}) / z\\big)^{2}")

  hdr <- paste("|", col_hdrs, collapse = " ") |>
    paste("|\n")

  attr_str <- paste0("#+ATTR_LATEX: :booktabs t :align c*{", ncols - 1,
                     "}{>{$}w{r}{2.3cm}<{$}}\n")

  cat(attr_str, hline, hdr, hline, body, hline, foot, hline)
#+end_src

Índice de la brecha de la pobreza, $PG$:
#+begin_export latex
\[
  PG =
  \frac{1}{N} \sum \frac{z - y_i}{z} =
  \frac{1}{40} 2.698 = 0.067.
\]
#+end_export

Índice de la brecha cuadrática de la pobreza, $SPG$:
#+begin_export latex
\[
  SPG =
  \frac{1}{N} \sum \left(\frac{z - y_i}{z}\right)^2 =
  \frac{1}{40} 1.346 = 0.034.
\]
#+end_export


#+begin_tcolorbox
#+ATTR_LATEX: :options [1), resume = questions]
2. <<item:2>> ($0.3$ /puntos/) Suponga que recibe \num{10 000} euros de
   una organización de ayuda a la pobreza y puede distribuirlos sin
   coste y como desee entre los 40 ciudadanos del país. Si se plantea
   el objetivo de reducir $H$, ¿cuál sería la distribución óptima de
   los \num{10 000} euros? ¿Y si busca minimizar $PG$? ¿Y en el caso
   de $SPG$?
#+end_tcolorbox

Para minimizar $H$, se debe priorizar a quienes estén más cerca de la
línea de la pobreza. Se comienza con el más cercano, Se comienza con
el más cercano, asignándole la cantidad necesaria para alcanzar el
umbral, y se continúa hasta agotar los fondos.

La siguiente tabla muestra las rentas iniciales, $y^{0}_{i}$, las
asignaciones a cada individuo, $d_{i}$, las rentas después de las
transferencias, $y^{1}_{i}$, y las brechas absoluta, relativa y
cuadrática.

#+begin_src R :results output raw
  gap <- z - y[1:q]

  dsum <- cumsum(rev(gap))
  dsum[dsum > 10] <- 10
  d <- rev(c(dsum[1], diff(dsum)))

  tbl <- tibble(i = 1:q,
                y0 = y[1:q],
                d = d,
                y1 = y0 + d,
                zy = z - y1,
                zyz = zy / z,
                zyz2 = zyz^2)

  ncols <- ncol(tbl)
  digits <- c(0, 1, 1, 1, 1, 3, 3)
  wdth <- 6

  body <- map2(tbl, digits,
                  \(x, d) formatC(x, digits = d, width = wdth, format = "f")) |>
    as_tibble() |>
    as.matrix() |>
    apply(1, \(x) paste("|", x, collapse = " ")) |>
    paste(collapse = " |\n") |>
    paste("|\n")

  hyphens <- rep("-", wdth + 2) |>
    paste0(collapse = "")

  hline <- paste0("|", hyphens) |>
    rep(ncols) |>
    paste0(collapse = "") |>
    paste0("|\n")

  drop_cols <- -1
  sums <- tbl[drop_cols] |>
    map(sum) |>
    map2(digits[drop_cols],
         \(x, d) formatC(x, digits = d, width = wdth, format = "f"))

  tbl_summ <- c("\\text{Suma}", unlist(sums)) |> unname()

  foot <- paste("| ", tbl_summ, collapse = " ") |>
    paste("|\n")

  col_hdrs <- c("i",
                "y^{0}_{i}",
                "d_{i}",
                "y^{1}_{i}",
                "z - y^{1}_{i}",
                "(z - y^{1}_{i}) / z",
                "\\big((z - y^{1}_{i}) / z\\big)^{2}")

  hdr <- paste("|", col_hdrs, collapse = " ") |>
    paste("|\n")

  attr_str <- paste0("#+ATTR_LATEX: :booktabs t :align c*{", ncols - 1,
                     "}{>{$}r<{$}}\n")

  cat(attr_str, hline, hdr, hline, body, hline, foot, hline)
#+end_src

Después de las transferencias, los indicadores toman los siguientes
valores:
#+begin_export latex
\begin{gather*}
  H = \frac{q^{1}}{N} = \frac{3}{40} = 0.075; \\[2ex]
  PG =
  \frac{1}{N} \sum \frac{z - y^{1}_i}{z} =
  \frac{1}{40} 1.656 = 0.041; \\[2ex]
  SPG =
  \frac{1}{N} \sum \left(\frac{z - y^{1}_i}{z}\right)^2 =
  \frac{1}{40} 1.029 = 0.026.
\end{gather*}
#+end_export


El índice de la brecha de la pobreza, $PG$, es insensible a como se
reparten las asignaciones entre los diferentes individuos, siempre que
nadie que reciba una transferencia acabe teniendo una renta superior
al umbral de la pobreza. Después de las transferencias el índice $PG$ es:
#+begin_export latex
\begin{equation*}
  PG^{1} =
  \frac{1}{N} \sum_{i=1}^{q^{0}} \frac{z - y^{1}_i}{z} =
  \frac{1}{N}  \sum_{i=1}^{q^{0}} \frac{z - y^{0}_i - d_i}{z} =
  \frac{1}{N}  \sum_{i=1}^{q^{0}}  \frac{z - y^{0}_i}{z} -
  \frac{1}{N}  \sum_{i=1}^{q^{0}}  \frac{d_i}{z} =
  PG^{0} - \frac{D}{N z},
\end{equation*}
#+end_export
donde $D$ es la suma total de las transferencias. La fórmula anterior
muestra que el índice $PG$ sólo depende de la cuantía total de las
transferencias y no de cómo se reparta entre los pobres.

En nuestro caso, sea cual sea la asignación de los \money{10 000}, el
índice $PG$ tomará siempre el mismo valor:
#+begin_export latex
\[
  PG^{1} = PG^{0} - \frac{D}{N z} = 0.067 - \frac{10}{40 \cdot 9.6} = 0.041.
\]
#+end_export

Finalmente, para minimizar la brecha cuadrática, $SPG$ hay que
priorizar a los más pobres, otorgando más dinero a quienes están más
alejados del umbral.

Se empezaría asignando dinero al individuo más pobre, hasta que su
renta se iguale con la del segundo más pobre. Ahora se asigna dinero a
estas dos personas hasta que su renta se iguala a la del tercero más
pobre. Se continua con estas asignaciones hasta agotar todos los
fondos. La aplicación de este algoritmo a nuestro caso llevaría a la siguiente situación:
#+begin_src R :results output raw
  D <- 10
  nd <- q
  target <- z
  rem <- -1

  repeat {
    di <- target - y[1:nd]
    rem <- D - sum(di)
    if (rem >= 0) {
      break
    }
    target <- y[nd]
    nd <- nd - 1
  }

  d[1:q] <- 0
  d[1:nd] <- di
  d[1:(nd + 1)] <- d[1:(nd + 1)] + rem / (nd + 1)


  tbl <- tibble(i = 1:q,
                y0 = y[1:q],
                d = d,
                y1 = y0 + d,
                zy = z - y1,
                zyz = zy / z,
                zyz2 = zyz^2)

  ncols <- ncol(tbl)
  digits <- c(0, 1, 1, 1, 1, 3, 3)
  wdth <- 6

  body <- map2(tbl, digits,
                  \(x, d) formatC(x, digits = d, width = wdth, format = "f")) |>
    as_tibble() |>
    as.matrix() |>
    apply(1, \(x) paste("|", x, collapse = " ")) |>
    paste(collapse = " |\n") |>
    paste("|\n")

  hyphens <- rep("-", wdth + 2) |>
    paste0(collapse = "")

  hline <- paste0("|", hyphens) |>
    rep(ncols) |>
    paste0(collapse = "") |>
    paste0("|\n")

  drop_cols <- -1
  sums <- tbl[drop_cols] |>
    map(sum) |>
    map2(digits[drop_cols],
         \(x, d) formatC(x, digits = d, width = wdth, format = "f"))

  tbl_summ <- c("\\text{Suma}", unlist(sums)) |> unname()

  foot <- paste("| ", tbl_summ, collapse = " ") |>
    paste("|\n")

  col_hdrs <- c("i",
                "y^{0}_{i}",
                "d_{i}",
                "y^{1}_{i}",
                "z - y^{1}_{i}",
                "(z - y^{1}_{i}) / z",
                "\\big((z - y^{1}_{i}) / z\\big)^{2}")

  hdr <- paste("|", col_hdrs, collapse = " ") |>
    paste("|\n")

  attr_str <- paste0("#+ATTR_LATEX: :booktabs t :align c*{", ncols - 1,
                     "}{>{$}r<{$}}\n")

  cat(attr_str, hline, hdr, hline, body, hline, foot, hline)
#+end_src

Después de las transferencias, los indicadores toman los siguientes
valores:
#+begin_export latex
\begin{gather*}
  H = \frac{q^{1}}{N} = \frac{8}{40} = 0.2; \\[2ex]
  PG =
  \frac{1}{N} \sum \frac{z - y^{1}_i}{z} =
  \frac{1}{40} 1.656 = 0.041; \\[2ex]
  SPG =
  \frac{1}{N} \sum \left(\frac{z - y^{1}_i}{z}\right)^2 =
  \frac{1}{40} 0.400 = 0.010.
\end{gather*}
#+end_export



#+begin_tcolorbox
#+ATTR_LATEX: :options [1), resume = questions]
3. <<item:3>> ($0.2$ /puntos/) Suponga que las funciones de utilidad de
   cada uno de los ciudadanos del país son idénticas y sólo dependen
   del logaritmo de la renta: $U_i = \log(y_i)$, por lo que las
   utilidades marginales de la renta son decrecientes. Si adopta un
   enfoque *rawlsiano*, ¿cuál es la forma óptima de distribuir los
   \num{10 000} euros? ¿Y si usa una función de bienestar social
   *utilitarista*?
#+end_tcolorbox

Desde el enfoque /rawlsiano/, se prioriza el bienestar del más
pobre. El reparto comenzaría por este individuo hasta conseguir que se
iguale su renta con la del segundo más pobre. En este punto, se
transferiría dinero a esas dos personas hasta igualar su renta con la
del tercero más pobre y así sucesivamente hasta que se agoten los
fondos a repartir.

El utilitarismo, por su parte, busca maximizar la suma de las
utilidades de todos los individuos que componen la sociedad. De
acuerdo con este principio se priorizarían las personas con una mayor
utilidad marginal de la renta. Si la función de utilidad es
logarítmica, la utilidad marginal de la renta decrece con la renta:
#+begin_export latex
\[
  \frac{d U_i}{d y_i} = \frac{d  \log(y_i)}{d y_i} = \frac{1}{y_i}.
\]
#+end_export
Por tanto, se prioriza igualmente a los más pobres ya que su utilidad
marginal de la renta es mayor.


#+begin_tcolorbox
#+ATTR_LATEX: :options [1), resume = questions]
4. ($0.1$ /puntos/) Compare los resultados obtenidos en los apartados
   [[item:2]] y [[item:3]]. ¿En qué casos coinciden los resultados de los
   índices de pobreza y de las funciones de bienestar social?
#+end_tcolorbox

En el caso que hemos analizado, la distribución óptima coincide si se
busca maximizar el bienestar (ya sea /rawlsiano/ o utilitarista) o
minimizar el índice $SPG$, pues con todos estos enfoques se prioriza a
los más pobres.


De los otros dos índices, solo el índice de la pobreza proporciona una
solución definida que consiste en centrarse en los individuos que se
encuentran más cerca de la línea de la pobreza. Esta estrategia no
consideraría en absoluto a las personas más pobres que, si hubiese
fondos suficientes, serían las últimas en recibir alguna
transferencia.

Por último, el índice de la brecha de la pobreza no sería útil para
decidir cómo realizar las transferencias ya que solo es sensible al
monto total de las donaciones y no a cómo se distribuyan.


# Local Variables:
# ispell-local-dictionary: "spanish"
# End:
